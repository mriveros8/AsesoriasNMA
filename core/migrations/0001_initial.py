# Generated by Django 4.1 on 2022-11-02 22:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rut', models.CharField(max_length=100, null=True, verbose_name='Rut')),
                ('nombre_empresa', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre Empresa')),
                ('direccion', models.CharField(max_length=100, null=True, verbose_name='Direccion')),
                ('telefono', models.CharField(blank=True, max_length=40, null=True, verbose_name='Telefono')),
                ('rubro', models.CharField(blank=True, max_length=40, null=True, verbose_name='Rubro')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profesional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_prof', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre Profesional')),
                ('apellido_prof', models.CharField(blank=True, max_length=100, null=True, verbose_name='Apellido Profesional')),
                ('correo_prof', models.CharField(blank=True, max_length=100, null=True, verbose_name='Correo Profesional')),
                ('telefono_prof', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telefono Profesional')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitar_asesoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_asesoria', models.DateField(verbose_name='Fecha Asesoria')),
                ('hora_asesoria', models.TimeField(verbose_name='Hora Asesoria')),
                ('nombre_cliente', models.CharField(max_length=45, verbose_name='Nombre Cliente')),
                ('rut_cliente', models.CharField(max_length=45, verbose_name='Rut Cliente')),
                ('tipo_asesoria', models.CharField(max_length=45, verbose_name='Tipo de Asesoria')),
                ('problemas_encontrados', models.CharField(max_length=45, verbose_name='Problemas Encontrados')),
                ('asistentes', models.IntegerField(verbose_name='Asistentes Involucrados')),
            ],
        ),
        migrations.CreateModel(
            name='Visita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha Inicio')),
                ('fecha_termino', models.DateField(verbose_name='Fecha Termino')),
                ('hora_inicio', models.TimeField(verbose_name='Hora Inicio')),
                ('hora_termino', models.TimeField(verbose_name='Hora Termino')),
                ('visita_extra', models.BooleanField(verbose_name='Es visita extra')),
                ('Profesional', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.profesional')),
                ('Usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_evaluada', models.CharField(max_length=45, verbose_name='Area Evaluada')),
                ('uso_epi', models.BooleanField(verbose_name='Uso de Equipos de Proteccion')),
                ('se単ales_extintores', models.BooleanField(verbose_name='Se単ales de Extintores')),
                ('se単ales_no_fumar', models.BooleanField(verbose_name='Se単ales de No Fumar')),
                ('entrenamiento_admision', models.CharField(max_length=45, verbose_name='Entrenamiento del equipo')),
                ('validez_extintores', models.CharField(max_length=45, verbose_name='Validez de los Extintores')),
                ('instalaciones_electricas', models.CharField(max_length=45, verbose_name='Instalaciones Electricas')),
                ('instalaciones_sanitarias', models.CharField(max_length=45, verbose_name='Instalaciones Sanitarias')),
                ('alarmas_incendios', models.BooleanField(verbose_name='Alarmas contra Incendio')),
                ('estado_herramientas', models.CharField(max_length=45, verbose_name='Herramientas')),
                ('estado_materiales', models.CharField(max_length=45, verbose_name='Materiales')),
                ('resultado_visita', models.CharField(max_length=100, verbose_name='Resultado Visita')),
                ('actividades', models.CharField(max_length=45, verbose_name='Actividades Necesarias')),
                ('problemas_encontrados', models.CharField(max_length=45, verbose_name='Problemas de Seguridad encontrados')),
                ('Visita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.visita')),
            ],
        ),
        migrations.CreateModel(
            name='Capacitacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_capacitacion', models.DateField(verbose_name='Fecha Capacitacion')),
                ('hora_capacitacion', models.TimeField(verbose_name='Hora Capacitacion')),
                ('asistentes_capacitacion', models.IntegerField(verbose_name='Asistentes')),
                ('materiales_capacitacion', models.CharField(max_length=100, verbose_name='Materiales')),
                ('capacitacion_extra', models.BooleanField(verbose_name='Es capacitacion extra')),
                ('monto_capacitacion', models.CharField(max_length=45, verbose_name='Valor Capacitacion')),
                ('fecha_termino_capacitacion', models.DateField(verbose_name='Fecha Termino Capacitacion')),
                ('hora_termino_capacitacion', models.TimeField(verbose_name='Hora Termino Capacitacion')),
                ('Profesional', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.profesional')),
                ('Usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Asignar_asesoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gestion_accidentes', models.CharField(max_length=45, verbose_name='Gestion Accidentes')),
                ('mejoras_propuestas', models.CharField(max_length=45, verbose_name='Mejoras Propuestas')),
                ('info_evento', models.CharField(max_length=45, verbose_name='Informacion del Evento')),
                ('diligencias_asociadas', models.CharField(max_length=45, verbose_name='Diligencias Asociadas')),
                ('juicios_asociados', models.CharField(max_length=45, verbose_name='Juicios Asociados')),
                ('estado_asesoria', models.BooleanField(verbose_name='Asesoria Completada')),
                ('Profesional', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.profesional')),
                ('Solicitar_asesoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.solicitar_asesoria')),
                ('Usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
